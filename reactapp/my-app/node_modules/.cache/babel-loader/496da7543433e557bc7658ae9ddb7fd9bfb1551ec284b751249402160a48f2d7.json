{"ast":null,"code":"var _jsxFileName = \"/Users/mennokonijn/Desktop/test/reactapp/my-app/src/tasks/taskPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport './tasks.scss';\nimport { getTasks } from \"./tasks.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskPage = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    // Fetch tasks when the component mounts\n    getTasks().then(data => {\n      setTasks(data.tasks);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"task-list\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"task-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-title\",\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-description\",\n          children: task.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-status\",\n          children: [\"Status: \", task.completed ? 'Completed' : 'Incomplete']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskPage, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = TaskPage;\nexport default TaskPage;\nvar _c;\n$RefreshReg$(_c, \"TaskPage\");","map":{"version":3,"names":["React","useEffect","useState","getTasks","jsxDEV","_jsxDEV","TaskPage","_s","tasks","setTasks","then","data","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","task","title","description","completed","id","_c","$RefreshReg$"],"sources":["/Users/mennokonijn/Desktop/test/reactapp/my-app/src/tasks/taskPage.tsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport './tasks.scss';\nimport { getTasks } from \"./tasks.service\";\n\nexport interface Task {\n    id: number;\n    title: string;\n    description: string;\n    completed: boolean;\n}\n\nconst TaskPage = () => {\n    const [tasks, setTasks] = useState<Task[]>([]);\n\n    useEffect(() => {\n        // Fetch tasks when the component mounts\n        getTasks()\n            .then((data) => {\n                setTasks(data.tasks);\n            })\n            .catch((error) => {\n                console.error(error);\n            });\n    }, []);\n\n    return (\n        <div className=\"tasks-container\">\n            <h2>Task List</h2>\n            <ul className=\"task-list\">\n                {tasks.map((task) => (\n                    <li key={task.id} className=\"task-item\">\n                        <div className=\"task-title\">{task.title}</div>\n                        <div className=\"task-description\">{task.description}</div>\n                        <div className=\"task-status\">\n                            Status: {task.completed ? 'Completed' : 'Incomplete'}\n                        </div>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default TaskPage"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAO,cAAc;AACrB,SAASC,QAAQ,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAS3C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAS,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACZ;IACAE,QAAQ,CAAC,CAAC,CACLO,IAAI,CAAEC,IAAI,IAAK;MACZF,QAAQ,CAACE,IAAI,CAACH,KAAK,CAAC;IACxB,CAAC,CAAC,CACDI,KAAK,CAAEC,KAAK,IAAK;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACxB,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIR,OAAA;IAAKU,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC5BX,OAAA;MAAAW,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBf,OAAA;MAAIU,SAAS,EAAC,WAAW;MAAAC,QAAA,EACpBR,KAAK,CAACa,GAAG,CAAEC,IAAI,iBACZjB,OAAA;QAAkBU,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACnCX,OAAA;UAAKU,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAEM,IAAI,CAACC;QAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC9Cf,OAAA;UAAKU,SAAS,EAAC,kBAAkB;UAAAC,QAAA,EAAEM,IAAI,CAACE;QAAW;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC1Df,OAAA;UAAKU,SAAS,EAAC,aAAa;UAAAC,QAAA,GAAC,UACjB,EAACM,IAAI,CAACG,SAAS,GAAG,WAAW,GAAG,YAAY;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD,CAAC;MAAA,GALDE,IAAI,CAACI,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMZ,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACb,EAAA,CA9BID,QAAQ;AAAAqB,EAAA,GAARrB,QAAQ;AAgCd,eAAeA,QAAQ;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}